---
  import {WEER_API} from "../secrets"
  import Container from "../components/Container.svelte"
  import Icon from "../components/Icon.svelte"

  const [PE_LAT, PE_LON] = [51.992886, 4.372480]; // Latitude and Longditude of Proteus Eretes

  function getIcon(name) {
    switch (name) {
      case "bliksem":
        return "thunderstorm-outline";
      case "regen":
      case "buien":
      case "hagel":
      case "halfbewolkt_regen":
        return "rainy-outline";
      case "halfbewolkt":
        return "partly-sunny-outline";
      case "bewolkt":
      case "mist":
      case "nachtmist":
      case "wolkennacht":
      case "zwaarbewolkt":
        return "cloudy-outline";
      case "sneeuw":
        return "snow-outline"
      default: 
        return "sunny-outline"
    }
  } 

  async function checkWeather() {
    // get API
    const weather = await fetch(`https://weerlive.nl/api/json-data-10min.php?key=${WEER_API}&locatie=${PE_LAT},${PE_LON}`)
    const weatherJson = await weather.json()
    const {windbft, temp, samenv, windr, zicht, d0weer} = weatherJson.liveweer[0]

    background = "var(--red-light)"; border = "1px solid var(--red)";
    if (d0weer == 'bliksem') return {icon: "thunderstorm-outline", title: "Er is een vaarverbod", message: "Het bliksemt" }

    if (d0weer == 'hagel') return {icon: "rainy-outline", title: "Er is een vaarverbod", message: "Het hagelt" }

    if (d0weer == 'mist') return {icon: "cloudy-outline", titile: "Er is een vaarverbod", message: `Er is mist met ${zicht}km zicht`}

    if (temp <= 0) return {icon: "snow-outline", title: "Er is een vaarverbod", message: `Het is ${temp}graden`}

    if (windbft >= 7) return {icon: "warning-outline", title: "Er is een vaarverbod", message: `Er staat wind kracht ${windbft}`}

    background = "white"; border = "1px solid var(--light)";
    return {icon: getIcon(d0weer), title: samenv, message: `Het is ${temp}â„ƒ met windkracht ${windbft}bft en windrichting ${windr}.` }
  }

  async function getWeather() {
    const sunPosition = await fetch(`https://api.sunrise-sunset.org/json?lat=${PE_LAT}&lng=${PE_LON}`)
    const {results, status} = await sunPosition.json();

    if (status != "OK") return {icon: "warning-outline", title: "Er ging iets mis met het ophalen van de weer gegevens, probeer later te herladen." }
  
    const sunriseDate = {hours: new Date(`00 ${results.sunrise}`).getHours(), minutes: new Date(`00 ${results.sunrise}`).getMinutes()}
    const sunsetDate = {hours: new Date(`00 ${results.sunset}`).getHours(), minutes: new Date(`00 ${results.sunset}`).getMinutes()}
    const currentDate = {hours: new Date().getHours(), minutes: new Date().getHours()}

    if ((currentDate.hours >= sunsetDate.hours && currentDate.minutes >= sunsetDate.minutes) ||
        (currentDate.hours <= sunriseDate.hours && currentDate.minutes <= sunriseDate.minutes)
    ) {
      background = "var(--red-light)"
      border = "1px solid var(--red)"
      return {icon: "moon-outline", title: "Er is momenteel een vaarverbod.", message: `Het is donker, morgen vanaf ${sunriseDate.hours}:${sunriseDate.minutes} mag er weer geroeit worden.`}
    }

    return checkWeather()
  }

  const data = await getWeather()
---

<style>
  .weerLayout {
    display: flex;
  }

  .text {
    margin-left: 1em;
  }
</style>

<Container {background} header="Weer" link={{title:"meer info", href:"./weer"}}>
  <div class="weerLayout">
    <Icon size="2em" name={data.icon} />
    <div class="text">
      <div class="bold">{data.title}</div>
      {data.message}
    </div>
  </div>
</Container>